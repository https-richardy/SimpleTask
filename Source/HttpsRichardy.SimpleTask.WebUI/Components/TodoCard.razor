<div class="card mb-3 shadow">
    <div class="card-body">
        <h5 class="card-title">@Title</h5>

        @if (!string.IsNullOrEmpty(Description))
        {
            <p class="card-text">@Description</p>
        }

        <ul class="list-unstyled">
            @if (DueDate.HasValue)
            {
                <li><strong>Due Date:</strong> @DueDate.Value.ToShortDateString()</li>
            }

            @if (Priority != Domain.Models.Enums.Priority.None)
            {
                <li><strong>Priority:</strong> @Priority.ToString()</li>
            }
        </ul>

        <button class="btn btn-success mr-6" @onclick="CompleteTask">Complete</button>
        <button class="btn btn-danger mr-6" @onclick="DeleteTask">Delete</button>
        <button class="btn btn-primary mr-6" @onclick="EditTask">Edit</button>
    </div>
</div>


@code {
    [Parameter] public string Id { get; set; }

    [Parameter] public string Title { get; set; } = string.Empty;

    [Parameter] public string? Description { get; set; }

    [Parameter] public bool Done { get; set; }

    [Parameter] public DateTime? DueDate { get; set; }

    [Parameter] public Priority? Priority { get; set; }

    [Parameter] public EventCallback<bool> OnComplete { get; set; }

    [Parameter] public EventCallback OnDelete { get; set; }

    [Parameter] public EventCallback OnEdit { get; set; }

    private void CompleteTask()
    {
        OnComplete.InvokeAsync(!Done);
    }

    private void DeleteTask()
    {
        OnDelete.InvokeAsync();
    }

    private void EditTask()
    {
        OnEdit.InvokeAsync();
    }
}